
example6.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001fc  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000394  0800039c  0001039c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000394  08000394  0001039c  2**0
                  CONTENTS
  4 .ARM          00000000  08000394  08000394  0001039c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000394  0800039c  0001039c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000394  08000394  00010394  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000398  08000398  00010398  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001039c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800039c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800039c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001039c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000004be  00000000  00000000  000103cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000e0  00000000  00000000  0001088a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00010970  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000038  00000000  00000000  000109c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f65  00000000  00000000  000109f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000047c  00000000  00000000  0001195d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003de5  00000000  00000000  00011dd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00015bbe  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000084  00000000  00000000  00015c10  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800037c 	.word	0x0800037c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	0800037c 	.word	0x0800037c

080001d8 <delay>:
#include <stdint.h>

#include"main.h"

void delay(void)
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
	for(uint32_t i=0;i<300000;i++);
 80001de:	2300      	movs	r3, #0
 80001e0:	607b      	str	r3, [r7, #4]
 80001e2:	e002      	b.n	80001ea <delay+0x12>
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	3301      	adds	r3, #1
 80001e8:	607b      	str	r3, [r7, #4]
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4a04      	ldr	r2, [pc, #16]	; (8000200 <delay+0x28>)
 80001ee:	4293      	cmp	r3, r2
 80001f0:	d9f8      	bls.n	80001e4 <delay+0xc>

}
 80001f2:	bf00      	nop
 80001f4:	bf00      	nop
 80001f6:	370c      	adds	r7, #12
 80001f8:	46bd      	mov	sp, r7
 80001fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fe:	4770      	bx	lr
 8000200:	000493df 	.word	0x000493df

08000204 <main>:

int main(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	b086      	sub	sp, #24
 8000208:	af00      	add	r7, sp, #0

	RCC_AHBIENR_t *AHB1ENR = ADDR_REG_AHB1ENR;
 800020a:	4b30      	ldr	r3, [pc, #192]	; (80002cc <main+0xc8>)
 800020c:	617b      	str	r3, [r7, #20]
	GPIOx_MODER_t   *GPIOA_MODER = ADDR_REG_GPIOA_MODE;
 800020e:	4b30      	ldr	r3, [pc, #192]	; (80002d0 <main+0xcc>)
 8000210:	613b      	str	r3, [r7, #16]
	GPIOx_ODR_t  *GPIOA_ODR=ADDR_GPIOA_ODR;
 8000212:	4b30      	ldr	r3, [pc, #192]	; (80002d4 <main+0xd0>)
 8000214:	60fb      	str	r3, [r7, #12]

	GPIOx_MODER_t   *GPIOC_MODER = ADDR_REG_GPIOC_MODE;
 8000216:	4b30      	ldr	r3, [pc, #192]	; (80002d8 <main+0xd4>)
 8000218:	60bb      	str	r3, [r7, #8]
	GPIOx_ODR_t  *GPIOC_ODR=ADDR_GPIOC_ODR;
 800021a:	4b30      	ldr	r3, [pc, #192]	; (80002dc <main+0xd8>)
 800021c:	607b      	str	r3, [r7, #4]


	AHB1ENR->gpioc_en=1;// ENABLE CLK FOR GPIOC
 800021e:	697a      	ldr	r2, [r7, #20]
 8000220:	7813      	ldrb	r3, [r2, #0]
 8000222:	f043 0304 	orr.w	r3, r3, #4
 8000226:	7013      	strb	r3, [r2, #0]
	AHB1ENR->gpioa_en=1;
 8000228:	697a      	ldr	r2, [r7, #20]
 800022a:	7813      	ldrb	r3, [r2, #0]
 800022c:	f043 0301 	orr.w	r3, r3, #1
 8000230:	7013      	strb	r3, [r2, #0]

	GPIOA_MODER->moder_5=1; // OUTPUT MODE 01
 8000232:	693a      	ldr	r2, [r7, #16]
 8000234:	7853      	ldrb	r3, [r2, #1]
 8000236:	2101      	movs	r1, #1
 8000238:	f361 0383 	bfi	r3, r1, #2, #2
 800023c:	7053      	strb	r3, [r2, #1]

	GPIOC_MODER->moder_0=1; // OUTPUT MODE 01
 800023e:	68ba      	ldr	r2, [r7, #8]
 8000240:	7813      	ldrb	r3, [r2, #0]
 8000242:	2101      	movs	r1, #1
 8000244:	f361 0301 	bfi	r3, r1, #0, #2
 8000248:	7013      	strb	r3, [r2, #0]
	GPIOC_MODER->moder_1=1; // OUTPUT MODE 01
 800024a:	68ba      	ldr	r2, [r7, #8]
 800024c:	7813      	ldrb	r3, [r2, #0]
 800024e:	2101      	movs	r1, #1
 8000250:	f361 0383 	bfi	r3, r1, #2, #2
 8000254:	7013      	strb	r3, [r2, #0]
	GPIOC_MODER->moder_2=1; // OUTPUT MODE 01
 8000256:	68ba      	ldr	r2, [r7, #8]
 8000258:	7813      	ldrb	r3, [r2, #0]
 800025a:	2101      	movs	r1, #1
 800025c:	f361 1305 	bfi	r3, r1, #4, #2
 8000260:	7013      	strb	r3, [r2, #0]
	GPIOC_MODER->moder_3=1; // OUTPUT MODE 01
 8000262:	68ba      	ldr	r2, [r7, #8]
 8000264:	7813      	ldrb	r3, [r2, #0]
 8000266:	2101      	movs	r1, #1
 8000268:	f361 1387 	bfi	r3, r1, #6, #2
 800026c:	7013      	strb	r3, [r2, #0]
	GPIOC_MODER->moder_4=1; // OUTPUT MODE 01
 800026e:	68ba      	ldr	r2, [r7, #8]
 8000270:	7853      	ldrb	r3, [r2, #1]
 8000272:	2101      	movs	r1, #1
 8000274:	f361 0301 	bfi	r3, r1, #0, #2
 8000278:	7053      	strb	r3, [r2, #1]
	GPIOC_MODER->moder_5=1; // OUTPUT MODE 01
 800027a:	68ba      	ldr	r2, [r7, #8]
 800027c:	7853      	ldrb	r3, [r2, #1]
 800027e:	2101      	movs	r1, #1
 8000280:	f361 0383 	bfi	r3, r1, #2, #2
 8000284:	7053      	strb	r3, [r2, #1]
	GPIOC_MODER->moder_6=1; // OUTPUT MODE 01
 8000286:	68ba      	ldr	r2, [r7, #8]
 8000288:	7853      	ldrb	r3, [r2, #1]
 800028a:	2101      	movs	r1, #1
 800028c:	f361 1305 	bfi	r3, r1, #4, #2
 8000290:	7053      	strb	r3, [r2, #1]
	GPIOC_MODER->moder_7=1; // OUTPUT MODE 01
 8000292:	68ba      	ldr	r2, [r7, #8]
 8000294:	7853      	ldrb	r3, [r2, #1]
 8000296:	2101      	movs	r1, #1
 8000298:	f361 1387 	bfi	r3, r1, #6, #2
 800029c:	7053      	strb	r3, [r2, #1]
	GPIOC_MODER->moder_8=1; // OUTPUT MODE 01
 800029e:	68ba      	ldr	r2, [r7, #8]
 80002a0:	7893      	ldrb	r3, [r2, #2]
 80002a2:	2101      	movs	r1, #1
 80002a4:	f361 0301 	bfi	r3, r1, #0, #2
 80002a8:	7093      	strb	r3, [r2, #2]

	while(1)
	{
	GPIOC_ODR->ODR_0_7=0XAA;
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	22aa      	movs	r2, #170	; 0xaa
 80002ae:	701a      	strb	r2, [r3, #0]
	GPIOA_ODR->ODR_0_7=0XAA;
 80002b0:	68fb      	ldr	r3, [r7, #12]
 80002b2:	22aa      	movs	r2, #170	; 0xaa
 80002b4:	701a      	strb	r2, [r3, #0]
	GPIOC_ODR->ODR_5=1;
	GPIOC_ODR->ODR_6=1;
	GPIOC_ODR->ODR_7=1;
	GPIOC_ODR->ODR_8=1; */

	delay();
 80002b6:	f7ff ff8f 	bl	80001d8 <delay>
	GPIOC_ODR->ODR_0_7=0X00;
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	2200      	movs	r2, #0
 80002be:	701a      	strb	r2, [r3, #0]
	GPIOA_ODR->ODR_0_7=0X00;
 80002c0:	68fb      	ldr	r3, [r7, #12]
 80002c2:	2200      	movs	r2, #0
 80002c4:	701a      	strb	r2, [r3, #0]
	GPIOC_ODR->ODR_5=0;
	GPIOC_ODR->ODR_6=0;
	GPIOC_ODR->ODR_7=0;
	GPIOC_ODR->ODR_8=0;
*/
	delay();
 80002c6:	f7ff ff87 	bl	80001d8 <delay>
	GPIOC_ODR->ODR_0_7=0XAA;
 80002ca:	e7ee      	b.n	80002aa <main+0xa6>
 80002cc:	40023830 	.word	0x40023830
 80002d0:	40020000 	.word	0x40020000
 80002d4:	40020014 	.word	0x40020014
 80002d8:	40020800 	.word	0x40020800
 80002dc:	40020814 	.word	0x40020814

080002e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e0:	480d      	ldr	r0, [pc, #52]	; (8000318 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e8:	480c      	ldr	r0, [pc, #48]	; (800031c <LoopForever+0x6>)
  ldr r1, =_edata
 80002ea:	490d      	ldr	r1, [pc, #52]	; (8000320 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ec:	4a0d      	ldr	r2, [pc, #52]	; (8000324 <LoopForever+0xe>)
  movs r3, #0
 80002ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f0:	e002      	b.n	80002f8 <LoopCopyDataInit>

080002f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f6:	3304      	adds	r3, #4

080002f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002fc:	d3f9      	bcc.n	80002f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fe:	4a0a      	ldr	r2, [pc, #40]	; (8000328 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000300:	4c0a      	ldr	r4, [pc, #40]	; (800032c <LoopForever+0x16>)
  movs r3, #0
 8000302:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000304:	e001      	b.n	800030a <LoopFillZerobss>

08000306 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000306:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000308:	3204      	adds	r2, #4

0800030a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800030a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800030c:	d3fb      	bcc.n	8000306 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800030e:	f000 f811 	bl	8000334 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000312:	f7ff ff77 	bl	8000204 <main>

08000316 <LoopForever>:

LoopForever:
    b LoopForever
 8000316:	e7fe      	b.n	8000316 <LoopForever>
  ldr   r0, =_estack
 8000318:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800031c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000320:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000324:	0800039c 	.word	0x0800039c
  ldr r2, =_sbss
 8000328:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800032c:	2000001c 	.word	0x2000001c

08000330 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000330:	e7fe      	b.n	8000330 <ADC_IRQHandler>
	...

08000334 <__libc_init_array>:
 8000334:	b570      	push	{r4, r5, r6, lr}
 8000336:	4d0d      	ldr	r5, [pc, #52]	; (800036c <__libc_init_array+0x38>)
 8000338:	4c0d      	ldr	r4, [pc, #52]	; (8000370 <__libc_init_array+0x3c>)
 800033a:	1b64      	subs	r4, r4, r5
 800033c:	10a4      	asrs	r4, r4, #2
 800033e:	2600      	movs	r6, #0
 8000340:	42a6      	cmp	r6, r4
 8000342:	d109      	bne.n	8000358 <__libc_init_array+0x24>
 8000344:	4d0b      	ldr	r5, [pc, #44]	; (8000374 <__libc_init_array+0x40>)
 8000346:	4c0c      	ldr	r4, [pc, #48]	; (8000378 <__libc_init_array+0x44>)
 8000348:	f000 f818 	bl	800037c <_init>
 800034c:	1b64      	subs	r4, r4, r5
 800034e:	10a4      	asrs	r4, r4, #2
 8000350:	2600      	movs	r6, #0
 8000352:	42a6      	cmp	r6, r4
 8000354:	d105      	bne.n	8000362 <__libc_init_array+0x2e>
 8000356:	bd70      	pop	{r4, r5, r6, pc}
 8000358:	f855 3b04 	ldr.w	r3, [r5], #4
 800035c:	4798      	blx	r3
 800035e:	3601      	adds	r6, #1
 8000360:	e7ee      	b.n	8000340 <__libc_init_array+0xc>
 8000362:	f855 3b04 	ldr.w	r3, [r5], #4
 8000366:	4798      	blx	r3
 8000368:	3601      	adds	r6, #1
 800036a:	e7f2      	b.n	8000352 <__libc_init_array+0x1e>
 800036c:	08000394 	.word	0x08000394
 8000370:	08000394 	.word	0x08000394
 8000374:	08000394 	.word	0x08000394
 8000378:	08000398 	.word	0x08000398

0800037c <_init>:
 800037c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037e:	bf00      	nop
 8000380:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000382:	bc08      	pop	{r3}
 8000384:	469e      	mov	lr, r3
 8000386:	4770      	bx	lr

08000388 <_fini>:
 8000388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038a:	bf00      	nop
 800038c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800038e:	bc08      	pop	{r3}
 8000390:	469e      	mov	lr, r3
 8000392:	4770      	bx	lr
